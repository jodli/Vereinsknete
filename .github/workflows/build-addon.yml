name: Build Home Assistant Add-on (Branch & PR Validation)

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

env:
  REGISTRY: ghcr.io
  # Hardcoded lowercase image name (Option A simplification)
  IMAGE_NAME: jodli/vereinsknete-addon

concurrency:
  group: build-addon-${{ github.ref }}
  cancel-in-progress: true

jobs:
  build:
    name: Build per-arch add-on image
    runs-on: ubuntu-latest
    strategy:
      matrix:
        arch: [amd64, aarch64]
      fail-fast: false
      max-parallel: 1  # Build architectures sequentially to reduce load
    permissions:
      contents: read
      packages: write
    timeout-minutes: 150
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      # Cache npm dependencies to reduce network calls during builds
      - name: Setup Node.js (for dependency caching)
        if: matrix.arch == 'amd64'  # Only cache for amd64 to avoid issues
        uses: actions/setup-node@v4
        with:
          node-version: '22'
          cache: 'npm'
          cache-dependency-path: frontend/package-lock.json

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to GHCR
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract metadata (branch/PR)
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
          tags: |
            type=ref,event=branch
            type=ref,event=pr
            type=sha

      - name: Set platform + base image
        id: platform
        run: |
          if [ "${{ matrix.arch }}" = "amd64" ]; then
            echo "platform=linux/amd64" >> $GITHUB_OUTPUT
            echo "base_image=ghcr.io/home-assistant/amd64-base:latest" >> $GITHUB_OUTPUT
          else
            echo "platform=linux/arm64" >> $GITHUB_OUTPUT
            echo "base_image=ghcr.io/home-assistant/aarch64-base:latest" >> $GITHUB_OUTPUT
          fi

      - name: Build & push image (${{ matrix.arch }})
        uses: docker/build-push-action@v5
        with:
          context: .
          push: true
          platforms: ${{ steps.platform.outputs.platform }}
          tags: ${{ steps.meta.outputs.tags }}-${{ matrix.arch }}
          labels: ${{ steps.meta.outputs.labels }}
          build-args: |
            BUILD_FROM=${{ steps.platform.outputs.base_image }}
          cache-from: type=gha
          cache-to: type=gha,mode=max

  manifest:
    name: Create multi-arch manifests (branches only)
    runs-on: ubuntu-latest
    needs: build
    if: github.event_name == 'push'
    permissions:
      contents: read
      packages: write
    steps:
      - name: Log in to GHCR
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract metadata (branch)
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
          tags: |
            type=ref,event=branch
            type=sha

      - name: Create & push manifests
        run: |
          echo "Creating manifests for tags: ${{ steps.meta.outputs.tags }}"
          for tag in ${{ steps.meta.outputs.tags }}; do
            echo "Processing $tag"
            docker manifest create "$tag" \
              "$tag-amd64" \
              "$tag-aarch64"
            docker manifest annotate "$tag" "$tag-amd64" --arch amd64
            docker manifest annotate "$tag" "$tag-aarch64" --arch arm64
            docker manifest push "$tag"
          done